@using Before.Infrastructure.Extensions
@using Blob.Contracts.ViewModel
@using PagedList
@using PagedList.Mvc
@model StatusRecordPageViewModel

<div id="statusRecordPageContent" class="no-more-tables">

    @if (Model != null && Model.Items != null && Model.Items.Any())
    {
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().RecordId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().MonitorName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().MonitorDescription)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().TimeGenerated)
                    </th>
                    <th>
                        @Html.DisplayName("Actions")
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr class="@Html.AlertLevelClass(item.Status)">
                        <td data-title="@Html.DisplayNameFor(model => item.Status)">
                            @Html.AlertLevelValue(item.Status)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.RecordId)">
                            @Html.DisplayFor(modelItem => item.RecordId)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.MonitorName)">
                            <a href="@Url.Action("Single", "Status", new {id = item.RecordId})">@Html.DisplayFor(modelItem => item.MonitorName)</a>
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.MonitorDescription)">
                            @Html.DisplayFor(modelItem => item.MonitorDescription)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.TimeGenerated)">
                            @Html.DisplayFor(modelItem => item.TimeGenerated)
                        </td>
                        <td data-title="@Html.DisplayName("Actions")">
                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "Delete", "Status", routeValues: new { id = item.RecordId }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {@:
        <div class="text-muted">&nbsp;No status records found.</div>
    }
    @Html.BeforePagedListPager(Model.Items, (IPagedList)ViewBag.PagingMetaData, (Func<int, string>)ViewBag.PageUrl, "statusRecordPageContent")
</div>
