@model Blob.Contracts.Models.ViewModels.DeviceCommandIssueVm

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Issue Command</h4>
    </div>

    @using (Html.BeginForm())
    {
        <div class="modal-body">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>@Model.ShortName</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.DeviceId)
                @Html.HiddenFor(model => model.CommandType)
                @Html.HiddenFor(model => model.ShortName)

                @if (Model.CommandParameters != null)
                {
                    int i = 0;
                    foreach (var item in Model.CommandParameters)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.CommandParameters[i].Value, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.HiddenFor(model => model.CommandParameters[i].Key)
                                @Html.EditorFor(model => model.CommandParameters[i].Value, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CommandParameters[i].Value, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        { i++; }
                    }
                }
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn" data-dismiss="modal" aria-hidden="True">Cancel</button>
            <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-save"></i> Go!</button>
        </div>
    }
</div>
