@using Before.Infrastructure.Extensions
@model IEnumerable<Blob.Contracts.Models.ViewModels.DeviceListItemVm>

<div class="panel panel-default">
    <div class="panel-heading">
        <strong>Device List</strong>
    </div>

    @if (Model.Any())
    {
        <table class="table table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeviceName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeviceType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastActivityDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Enabled)
                </th>
                <th>
                    <div class="pull-right">
                        @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-arrow-up'></span>", "Upload a file", "UploadFile", "FileUpload", routeValues: null, htmlAttributes: new { data_modal = "", @class = "btn btn-primary" })
                        &nbsp;*@
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add a device", "Create", "Device", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr class="@Html.AlertLevelClass(item.Status)">
                    <td>
                        @Html.AlertLevelValue(item.Status)
                    </td>
                    <td>
                        <a href="@Url.Action("Single", "Device", new { id=item.DeviceId})">@Html.DisplayFor(modelItem => item.DeviceName)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeviceType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastActivityDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Enabled)
                    </td>
                    <td>
                        <div class="pull-right">
                            <span class="dropdown">
                                <a href="#" class="btn btn-default dropdown-toggle" data-toggle="dropdown" title="Issue command"><span class='glyphicon glyphicon-arrow-down'></span> <span class="caret"></span></a>
                                <ul class="dropdown-menu" role="menu">
                                    @foreach (var cmd in item.AvailableCommands)
                                    {
                                        <li>
                                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-arrow-down'></span> " + cmd.ShortName, "Issue Command", "IssueCommand", "Device", routeValues: new { id = item.DeviceId, commandType = cmd.CommandType }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                                        </li>
                                    }
                                </ul>
                            </span>
                            &nbsp;
                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "Edit", "Device", routeValues: new { id = item.DeviceId }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                            &nbsp;
                            @if (item.Enabled)
                            {
                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Disable", "Disable", "Device", routeValues: new { id = item.DeviceId }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })
                            }
                            else
                            {
                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-arrow-up'></span>", "Enable", "Enable", "Device", routeValues: new { id = item.DeviceId }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                            }
                        </div>
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        @: <div class="text-muted">&nbsp;No devices found.</div>
    }
</div>
