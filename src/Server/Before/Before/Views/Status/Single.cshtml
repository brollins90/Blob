@using Before.Infrastructure.Extensions
@model Blob.Contracts.Dto.ViewModels.StatusRecordSingleVm
@{
    ViewBag.Title = "Status";
}

<h2>@ViewBag.Title.</h2>

<div class="row">
    <div class="col-md-12">

        <p class="text-success">@ViewBag.StatusMessage</p>
        <hr />
        @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "Edit", "Device", routeValues: new { id = Model.DeviceId }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
            &nbsp;
            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Disable", "Disable", "Device", routeValues: new { id = Model.DeviceId }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })*@

        <div id="accordion" class="panel-group">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#status">Status</a>
                    </h4>
                </div>
                <div id="status" class="panel-collapse collapse in">
                    <div class="panel-body">

                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.RecordId)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.RecordId)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.Status)
                            </dt>
                            <dd>
                                @Html.AlertLevelValue(Model.Status)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.MonitorName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.MonitorName)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.MonitorDescription)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.MonitorDescription)
                            </dd>

                            <dt>
                                @Html.DisplayNameFor(model => model.TimeGenerated)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.TimeGenerated)
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#performance">Performance</a>
                    </h4>
                </div>
                <div id="performance" class="panel-collapse collapse in">
                    <div class="panel-body">

                        <hr />
                        @Html.Partial("_PerformanceList", Model.PerformanceRecords)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
