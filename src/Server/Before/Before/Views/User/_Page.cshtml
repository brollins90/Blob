@using Before.Infrastructure.Extensions
@using Blob.Contracts.Models.ViewModels
@using PagedList
@model UserPageVm

<div id="userPageContent" class="no-more-tables">

    @if (Model != null && Model.Items != null && Model.Items.Any())
    {
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().UserName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().Enabled)
                    </th>
                    <th>
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add new User", "Create", "User", routeValues: null, htmlAttributes: new { data_modal = "", @class = "btn btn-primary" })
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td data-title="@Html.DisplayNameFor(model => item.UserName)">
                            <a href="@Url.Action("Single", "User", new { id = item.UserId })">@Html.DisplayFor(modelItem => item.UserName)</a>
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Email)">
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => item.Enabled)">
                            @Html.DisplayFor(modelItem => item.Enabled)
                        </td>
                        <td data-title="@Html.DisplayName("Actions")">
                            @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "Edit", "User", routeValues: new { id = item.UserId }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                            &nbsp;
                            @if (item.Enabled)
                            {
                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-remove-sign'></span>", "Disable", "Disable", "User", routeValues: new { id = item.UserId }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })
                            }
                            else
                            {
                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-ok-sign'></span>", "Enable", "Enable", "User", routeValues: new { id = item.UserId }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {@:
        <div class="text-muted">&nbsp;No devices found.</div>
    }
    @Html.BeforePagedListPager(Model.Items, (IPagedList)ViewBag.PagingMetaData, (Func<int, string>)ViewBag.PageUrl, "userPageContent")
</div>
